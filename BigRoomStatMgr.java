/* This file is generated by genstat. */
/* No manual modification is permitted. */

package com.netease.game.stat;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

  
// bigroom统计结构
public class BigRoomStatMgr
{
	private static BigRoomStatMgr instance;
	
    
    // Session数目
    private int SessionNum;
    
    // 玩家数目
    private int PlayerNum;
    
    // Active玩家数目
    private int ActivePlayerNum;
    
    // join玩家数目
    private int JoinNum;
    
    // leave玩家数目
    private int LeaveNum;
    
    // call玩家数目
    private int CallNum;
    
    // kick玩家数目
    private int KickNum;
    
    // rejoin玩家数目
    private int RejoinNum;
    
    // sync玩家数目
    private int SyncNum;
    
    // swap玩家数目
    private int SwapNum;
    
    // 删除player数目
    private int DeleteInactivePlayerNum;
    
    // 删除session数目
    private int DeleteInactiveSessionNum;
    
    // 收包数目
    private int RecvPacketNum;
    
    // 发包数目
    private int SendPacketNum;
    
    // 收包流量
    private int RecvSizeNum;
    
    // 发包流量
    private int SendSizeNum;
    
    // Top收包处理时间
    private int ProcessTime;
    
    
    // 各个房间的玩家数目
    private int[] TablePlayerNum = new int[2];
    
    // 各个房间的Active玩家数目
    private int[] TableActivePlayerNum = new int[2];
    
    
    // Top收包数目
    private int[] TopRecvPacketNum = new int[50];
    
    // Top发包数目
    private int[] TopSendPacketNum = new int[50];
    
    // Top收包流量
    private int[] TopRecvSizeNum = new int[50];
    
    // Top发包流量
    private int[] TopSendSizeNum = new int[50];
    
    // Top收包处理时间
    private int[] TopProcessTime = new int[50];
        
        
	
	// bigroom统计结构
    public BigRoomStatMgr()
	{
		clear();
	}
	
	public static BigRoomStatMgr instance()
	{
		if (instance == null)
		{
			synchronized (BigRoomStatMgr.class)
			{
				if (instance == null)
				{
					instance = new BigRoomStatMgr();
					return instance;
				}
			}
		}
		return instance;
	}
	
	public void sortArray(int[] src, int[] desId, int[] desVal, boolean isMax)
	{
		int srcSize = src.length;
		int desSize = desId.length;
		if (isMax)
		{
			for (int i = 0; i < desSize; i++)
			{
				desId[i] = 0;
				desVal[i] = 0;
				int max = 0;
				for (int j = 0; j < srcSize; j++)
				{
					if (src[j] > max)
					{
						desId[i] = j;
						desVal[i] = src[j];
						max = src[j];
					}
				}
				src[desId[i]] = 0;
			}
		}
		else
		{
			for (int i = 0; i < desSize; i++)
			{
				desId[i] = 0;
				desVal[i] = 0;
				int min = 0xFFFFFFFF;
				for (int j = 0; j < srcSize; j++)
				{
					if (src[j] < min && src[j] > 0)
					{
						desId[i] = j;
						desVal[i] = src[j];
						min = src[j];
					}
				}
				src[desId[i]] = 0xFFFFFFFF;
			}
		}
	}

	public void sortHashMap(ConcurrentHashMap<Integer, Integer> map, int[] desId, int[] desVal, boolean isMax)
	{
		int desSize = desId.length;
		if (isMax)
		{
			for (int i = 0; i < desSize; i++)
			{
				desId[i] = 0;
				desVal[i] = 0;
				int max = 0;
				for (Map.Entry<Integer, Integer> e : map.entrySet())
				{
					if (e.getValue() > max)
					{
						desId[i] = e.getKey();
						desVal[i] = e.getValue();
						max = e.getValue();
					}
				}
				if (map.containsKey(desId[i]))
				{
					map.put(desId[i], 0);
				}
			}
		}
		else
		{
			for (int i = 0; i < desSize; i++)
			{
				desId[i] = 0;
				desVal[i] = 0;
				int min = 0xFFFFFFFF;
				for (Map.Entry<Integer, Integer> e : map.entrySet())
				{
					if (e.getValue() < min && e.getValue() > 0)
					{
						desId[i] = e.getKey();
						desVal[i] = e.getValue();
						min = e.getValue();
					}
				}
				if (map.containsKey(desId[i]))
				{
					map.put(desId[i], 0);
				}
			}
		}
	}
		
    
    // get Session数目
    public int getSessionNum()
    {
        return SessionNum;
    }
    
    // set Session数目
    public void setSessionNum(int _SessionNum)
    {
        SessionNum = _SessionNum;
    }
    
    // add Session数目
    public void addSessionNum(int _SessionNum)
    {
        SessionNum += _SessionNum;
    }
    
    // get 玩家数目
    public int getPlayerNum()
    {
        return PlayerNum;
    }
    
    // set 玩家数目
    public void setPlayerNum(int _PlayerNum)
    {
        PlayerNum = _PlayerNum;
    }
    
    // add 玩家数目
    public void addPlayerNum(int _PlayerNum)
    {
        PlayerNum += _PlayerNum;
    }
    
    // get Active玩家数目
    public int getActivePlayerNum()
    {
        return ActivePlayerNum;
    }
    
    // set Active玩家数目
    public void setActivePlayerNum(int _ActivePlayerNum)
    {
        ActivePlayerNum = _ActivePlayerNum;
    }
    
    // add Active玩家数目
    public void addActivePlayerNum(int _ActivePlayerNum)
    {
        ActivePlayerNum += _ActivePlayerNum;
    }
    
    // get join玩家数目
    public int getJoinNum()
    {
        return JoinNum;
    }
    
    // set join玩家数目
    public void setJoinNum(int _JoinNum)
    {
        JoinNum = _JoinNum;
    }
    
    // add join玩家数目
    public void addJoinNum(int _JoinNum)
    {
        JoinNum += _JoinNum;
    }
    
    // get leave玩家数目
    public int getLeaveNum()
    {
        return LeaveNum;
    }
    
    // set leave玩家数目
    public void setLeaveNum(int _LeaveNum)
    {
        LeaveNum = _LeaveNum;
    }
    
    // add leave玩家数目
    public void addLeaveNum(int _LeaveNum)
    {
        LeaveNum += _LeaveNum;
    }
    
    // get call玩家数目
    public int getCallNum()
    {
        return CallNum;
    }
    
    // set call玩家数目
    public void setCallNum(int _CallNum)
    {
        CallNum = _CallNum;
    }
    
    // add call玩家数目
    public void addCallNum(int _CallNum)
    {
        CallNum += _CallNum;
    }
    
    // get kick玩家数目
    public int getKickNum()
    {
        return KickNum;
    }
    
    // set kick玩家数目
    public void setKickNum(int _KickNum)
    {
        KickNum = _KickNum;
    }
    
    // add kick玩家数目
    public void addKickNum(int _KickNum)
    {
        KickNum += _KickNum;
    }
    
    // get rejoin玩家数目
    public int getRejoinNum()
    {
        return RejoinNum;
    }
    
    // set rejoin玩家数目
    public void setRejoinNum(int _RejoinNum)
    {
        RejoinNum = _RejoinNum;
    }
    
    // add rejoin玩家数目
    public void addRejoinNum(int _RejoinNum)
    {
        RejoinNum += _RejoinNum;
    }
    
    // get sync玩家数目
    public int getSyncNum()
    {
        return SyncNum;
    }
    
    // set sync玩家数目
    public void setSyncNum(int _SyncNum)
    {
        SyncNum = _SyncNum;
    }
    
    // add sync玩家数目
    public void addSyncNum(int _SyncNum)
    {
        SyncNum += _SyncNum;
    }
    
    // get swap玩家数目
    public int getSwapNum()
    {
        return SwapNum;
    }
    
    // set swap玩家数目
    public void setSwapNum(int _SwapNum)
    {
        SwapNum = _SwapNum;
    }
    
    // add swap玩家数目
    public void addSwapNum(int _SwapNum)
    {
        SwapNum += _SwapNum;
    }
    
    // get 删除player数目
    public int getDeleteInactivePlayerNum()
    {
        return DeleteInactivePlayerNum;
    }
    
    // set 删除player数目
    public void setDeleteInactivePlayerNum(int _DeleteInactivePlayerNum)
    {
        DeleteInactivePlayerNum = _DeleteInactivePlayerNum;
    }
    
    // add 删除player数目
    public void addDeleteInactivePlayerNum(int _DeleteInactivePlayerNum)
    {
        DeleteInactivePlayerNum += _DeleteInactivePlayerNum;
    }
    
    // get 删除session数目
    public int getDeleteInactiveSessionNum()
    {
        return DeleteInactiveSessionNum;
    }
    
    // set 删除session数目
    public void setDeleteInactiveSessionNum(int _DeleteInactiveSessionNum)
    {
        DeleteInactiveSessionNum = _DeleteInactiveSessionNum;
    }
    
    // add 删除session数目
    public void addDeleteInactiveSessionNum(int _DeleteInactiveSessionNum)
    {
        DeleteInactiveSessionNum += _DeleteInactiveSessionNum;
    }
    
    // get 收包数目
    public int getRecvPacketNum()
    {
        return RecvPacketNum;
    }
    
    // set 收包数目
    public void setRecvPacketNum(int _RecvPacketNum)
    {
        RecvPacketNum = _RecvPacketNum;
    }
    
    // add 收包数目
    public void addRecvPacketNum(int _RecvPacketNum)
    {
        RecvPacketNum += _RecvPacketNum;
    }
    
    // get 发包数目
    public int getSendPacketNum()
    {
        return SendPacketNum;
    }
    
    // set 发包数目
    public void setSendPacketNum(int _SendPacketNum)
    {
        SendPacketNum = _SendPacketNum;
    }
    
    // add 发包数目
    public void addSendPacketNum(int _SendPacketNum)
    {
        SendPacketNum += _SendPacketNum;
    }
    
    // get 收包流量
    public int getRecvSizeNum()
    {
        return RecvSizeNum;
    }
    
    // set 收包流量
    public void setRecvSizeNum(int _RecvSizeNum)
    {
        RecvSizeNum = _RecvSizeNum;
    }
    
    // add 收包流量
    public void addRecvSizeNum(int _RecvSizeNum)
    {
        RecvSizeNum += _RecvSizeNum;
    }
    
    // get 发包流量
    public int getSendSizeNum()
    {
        return SendSizeNum;
    }
    
    // set 发包流量
    public void setSendSizeNum(int _SendSizeNum)
    {
        SendSizeNum = _SendSizeNum;
    }
    
    // add 发包流量
    public void addSendSizeNum(int _SendSizeNum)
    {
        SendSizeNum += _SendSizeNum;
    }
    
    // get Top收包处理时间
    public int getProcessTime()
    {
        return ProcessTime;
    }
    
    // set Top收包处理时间
    public void setProcessTime(int _ProcessTime)
    {
        ProcessTime = _ProcessTime;
    }
    
    // add Top收包处理时间
    public void addProcessTime(int _ProcessTime)
    {
        ProcessTime += _ProcessTime;
    }
    
    
         
	// set 各个房间的玩家数目
    public void setTablePlayerNum(int index, int _TablePlayerNum)
    {
		if (index >= 2)
        {
            return;
        }
        TablePlayerNum[index] += _TablePlayerNum;
    }
	
    // add 各个房间的玩家数目
    public void addTablePlayerNum(int index, int _TablePlayerNum)
    {
        if (index >= 2)
        {
            return;
        }
        TablePlayerNum[index] += _TablePlayerNum;
    }
         
	// set 各个房间的Active玩家数目
    public void setTableActivePlayerNum(int index, int _TableActivePlayerNum)
    {
		if (index >= 2)
        {
            return;
        }
        TableActivePlayerNum[index] += _TableActivePlayerNum;
    }
	
    // add 各个房间的Active玩家数目
    public void addTableActivePlayerNum(int index, int _TableActivePlayerNum)
    {
        if (index >= 2)
        {
            return;
        }
        TableActivePlayerNum[index] += _TableActivePlayerNum;
    }
    
	
          
	// set Top收包数目
    public void setTopRecvPacketNum(int index, int _TopRecvPacketNum)
    {
		if (index >= 50)
        {
            return;
        }
        TopRecvPacketNum[index] += _TopRecvPacketNum;
    }
	       
    // add Top收包数目
    public void addTopRecvPacketNum(int index, int _TopRecvPacketNum)
    {
        if (index >= 50)
        {
            return;
        }
        TopRecvPacketNum[index] += _TopRecvPacketNum;
    }
          
	// set Top发包数目
    public void setTopSendPacketNum(int index, int _TopSendPacketNum)
    {
		if (index >= 50)
        {
            return;
        }
        TopSendPacketNum[index] += _TopSendPacketNum;
    }
	       
    // add Top发包数目
    public void addTopSendPacketNum(int index, int _TopSendPacketNum)
    {
        if (index >= 50)
        {
            return;
        }
        TopSendPacketNum[index] += _TopSendPacketNum;
    }
          
	// set Top收包流量
    public void setTopRecvSizeNum(int index, int _TopRecvSizeNum)
    {
		if (index >= 50)
        {
            return;
        }
        TopRecvSizeNum[index] += _TopRecvSizeNum;
    }
	       
    // add Top收包流量
    public void addTopRecvSizeNum(int index, int _TopRecvSizeNum)
    {
        if (index >= 50)
        {
            return;
        }
        TopRecvSizeNum[index] += _TopRecvSizeNum;
    }
          
	// set Top发包流量
    public void setTopSendSizeNum(int index, int _TopSendSizeNum)
    {
		if (index >= 50)
        {
            return;
        }
        TopSendSizeNum[index] += _TopSendSizeNum;
    }
	       
    // add Top发包流量
    public void addTopSendSizeNum(int index, int _TopSendSizeNum)
    {
        if (index >= 50)
        {
            return;
        }
        TopSendSizeNum[index] += _TopSendSizeNum;
    }
          
	// set Top收包处理时间
    public void setTopProcessTime(int index, int _TopProcessTime)
    {
		if (index >= 50)
        {
            return;
        }
        TopProcessTime[index] += _TopProcessTime;
    }
	       
    // add Top收包处理时间
    public void addTopProcessTime(int index, int _TopProcessTime)
    {
        if (index >= 50)
        {
            return;
        }
        TopProcessTime[index] += _TopProcessTime;
    }
    
	
    
    
    public void clear()
	{
		
		// Session数目
		SessionNum = 0;
		
		// 玩家数目
		PlayerNum = 0;
		
		// Active玩家数目
		ActivePlayerNum = 0;
		
		// join玩家数目
		JoinNum = 0;
		
		// leave玩家数目
		LeaveNum = 0;
		
		// call玩家数目
		CallNum = 0;
		
		// kick玩家数目
		KickNum = 0;
		
		// rejoin玩家数目
		RejoinNum = 0;
		
		// sync玩家数目
		SyncNum = 0;
		
		// swap玩家数目
		SwapNum = 0;
		
		// 删除player数目
		DeleteInactivePlayerNum = 0;
		
		// 删除session数目
		DeleteInactiveSessionNum = 0;
		
		// 收包数目
		RecvPacketNum = 0;
		
		// 发包数目
		SendPacketNum = 0;
		
		// 收包流量
		RecvSizeNum = 0;
		
		// 发包流量
		SendSizeNum = 0;
		
		// Top收包处理时间
		ProcessTime = 0;
		
		
		// 各个房间的玩家数目
		for (int i = 0; i < TablePlayerNum.length; i++)
		{
			TablePlayerNum[i] = 0;
		}
		
		// 各个房间的Active玩家数目
		for (int i = 0; i < TableActivePlayerNum.length; i++)
		{
			TableActivePlayerNum[i] = 0;
		}
		
		
		// Top收包数目
		for (int i = 0; i < TopRecvPacketNum.length; i++)
		{
			TopRecvPacketNum[i] = 0;
		}
		
		// Top发包数目
		for (int i = 0; i < TopSendPacketNum.length; i++)
		{
			TopSendPacketNum[i] = 0;
		}
		
		// Top收包流量
		for (int i = 0; i < TopRecvSizeNum.length; i++)
		{
			TopRecvSizeNum[i] = 0;
		}
		
		// Top发包流量
		for (int i = 0; i < TopSendSizeNum.length; i++)
		{
			TopSendSizeNum[i] = 0;
		}
		
		// Top收包处理时间
		for (int i = 0; i < TopProcessTime.length; i++)
		{
			TopProcessTime[i] = 0;
		}
		
		
	}

    public void printLog(String strFile)
	{
		File file = null;
		try
		{
			file = new File("log/");
			if (!file.exists())
			{
				file.mkdirs();
			}
			file = new File("log/" + strFile);
			if (!file.exists())
			{
				file.createNewFile();
			}
		}
		catch (IOException e)
		{
			e.printStackTrace();
			return;
		}
		
		Date date = new Date();
		DateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String time = format.format(date);

		
		// Top收包数目
		int[] uTopRecvPacketNumId = new int[5];
		int[] uTopRecvPacketNumVal = new int[5];
		sortArray(TopRecvPacketNum, uTopRecvPacketNumId, uTopRecvPacketNumVal, true);
		
		// Top发包数目
		int[] uTopSendPacketNumId = new int[5];
		int[] uTopSendPacketNumVal = new int[5];
		sortArray(TopSendPacketNum, uTopSendPacketNumId, uTopSendPacketNumVal, true);
		
		// Top收包流量
		int[] uTopRecvSizeNumId = new int[5];
		int[] uTopRecvSizeNumVal = new int[5];
		sortArray(TopRecvSizeNum, uTopRecvSizeNumId, uTopRecvSizeNumVal, true);
		
		// Top发包流量
		int[] uTopSendSizeNumId = new int[5];
		int[] uTopSendSizeNumVal = new int[5];
		sortArray(TopSendSizeNum, uTopSendSizeNumId, uTopSendSizeNumVal, true);
		
		// Top收包处理时间
		int[] uTopProcessTimeId = new int[5];
		int[] uTopProcessTimeVal = new int[5];
		sortArray(TopProcessTime, uTopProcessTimeId, uTopProcessTimeVal, true);
		
		
		
		String str = String.format("=============================%s=============================\n" +
			
			// Session数目
			"SessionNum\t%d\tSession数目\n" +
			
			// 玩家数目
			"PlayerNum\t%d\t玩家数目\n" +
			
			// Active玩家数目
			"ActivePlayerNum\t%d\tActive玩家数目\n" +
			
			// join玩家数目
			"JoinNum\t%d\tjoin玩家数目\n" +
			
			// leave玩家数目
			"LeaveNum\t%d\tleave玩家数目\n" +
			
			// call玩家数目
			"CallNum\t%d\tcall玩家数目\n" +
			
			// kick玩家数目
			"KickNum\t%d\tkick玩家数目\n" +
			
			// rejoin玩家数目
			"RejoinNum\t%d\trejoin玩家数目\n" +
			
			// sync玩家数目
			"SyncNum\t%d\tsync玩家数目\n" +
			
			// swap玩家数目
			"SwapNum\t%d\tswap玩家数目\n" +
			
			// 删除player数目
			"DeleteInactivePlayerNum\t%d\t删除player数目\n" +
			
			// 删除session数目
			"DeleteInactiveSessionNum\t%d\t删除session数目\n" +
			
			// 收包数目
			"RecvPacketNum\t%d\t收包数目\n" +
			
			// 发包数目
			"SendPacketNum\t%d\t发包数目\n" +
			
			// 收包流量
			"RecvSizeNum\t%d\t收包流量\n" +
			
			// 发包流量
			"SendSizeNum\t%d\t发包流量\n" +
			
			// Top收包处理时间
			"ProcessTime\t%d\tTop收包处理时间\n" +
			
			
			
			// 各个房间的玩家数目 0
			"TablePlayerNum0\t%d\t各个房间的玩家数目0\n" +
			
			// 各个房间的玩家数目 1
			"TablePlayerNum1\t%d\t各个房间的玩家数目1\n" +
			
			
			
			// 各个房间的Active玩家数目 0
			"TableActivePlayerNum0\t%d\t各个房间的Active玩家数目0\n" +
			
			// 各个房间的Active玩家数目 1
			"TableActivePlayerNum1\t%d\t各个房间的Active玩家数目1\n" +
			
			
			
			
			// Top收包数目 0
			"TopRecvPacketNumId0\t%d\tTop收包数目Id0\nTopRecvPacketNumVal0\t%d\tTop收包数目Val0\n" +
			
			// Top收包数目 1
			"TopRecvPacketNumId1\t%d\tTop收包数目Id1\nTopRecvPacketNumVal1\t%d\tTop收包数目Val1\n" +
			
			// Top收包数目 2
			"TopRecvPacketNumId2\t%d\tTop收包数目Id2\nTopRecvPacketNumVal2\t%d\tTop收包数目Val2\n" +
			
			// Top收包数目 3
			"TopRecvPacketNumId3\t%d\tTop收包数目Id3\nTopRecvPacketNumVal3\t%d\tTop收包数目Val3\n" +
			
			// Top收包数目 4
			"TopRecvPacketNumId4\t%d\tTop收包数目Id4\nTopRecvPacketNumVal4\t%d\tTop收包数目Val4\n" +
			
			
			
			// Top发包数目 0
			"TopSendPacketNumId0\t%d\tTop发包数目Id0\nTopSendPacketNumVal0\t%d\tTop发包数目Val0\n" +
			
			// Top发包数目 1
			"TopSendPacketNumId1\t%d\tTop发包数目Id1\nTopSendPacketNumVal1\t%d\tTop发包数目Val1\n" +
			
			// Top发包数目 2
			"TopSendPacketNumId2\t%d\tTop发包数目Id2\nTopSendPacketNumVal2\t%d\tTop发包数目Val2\n" +
			
			// Top发包数目 3
			"TopSendPacketNumId3\t%d\tTop发包数目Id3\nTopSendPacketNumVal3\t%d\tTop发包数目Val3\n" +
			
			// Top发包数目 4
			"TopSendPacketNumId4\t%d\tTop发包数目Id4\nTopSendPacketNumVal4\t%d\tTop发包数目Val4\n" +
			
			
			
			// Top收包流量 0
			"TopRecvSizeNumId0\t%d\tTop收包流量Id0\nTopRecvSizeNumVal0\t%d\tTop收包流量Val0\n" +
			
			// Top收包流量 1
			"TopRecvSizeNumId1\t%d\tTop收包流量Id1\nTopRecvSizeNumVal1\t%d\tTop收包流量Val1\n" +
			
			// Top收包流量 2
			"TopRecvSizeNumId2\t%d\tTop收包流量Id2\nTopRecvSizeNumVal2\t%d\tTop收包流量Val2\n" +
			
			// Top收包流量 3
			"TopRecvSizeNumId3\t%d\tTop收包流量Id3\nTopRecvSizeNumVal3\t%d\tTop收包流量Val3\n" +
			
			// Top收包流量 4
			"TopRecvSizeNumId4\t%d\tTop收包流量Id4\nTopRecvSizeNumVal4\t%d\tTop收包流量Val4\n" +
			
			
			
			// Top发包流量 0
			"TopSendSizeNumId0\t%d\tTop发包流量Id0\nTopSendSizeNumVal0\t%d\tTop发包流量Val0\n" +
			
			// Top发包流量 1
			"TopSendSizeNumId1\t%d\tTop发包流量Id1\nTopSendSizeNumVal1\t%d\tTop发包流量Val1\n" +
			
			// Top发包流量 2
			"TopSendSizeNumId2\t%d\tTop发包流量Id2\nTopSendSizeNumVal2\t%d\tTop发包流量Val2\n" +
			
			// Top发包流量 3
			"TopSendSizeNumId3\t%d\tTop发包流量Id3\nTopSendSizeNumVal3\t%d\tTop发包流量Val3\n" +
			
			// Top发包流量 4
			"TopSendSizeNumId4\t%d\tTop发包流量Id4\nTopSendSizeNumVal4\t%d\tTop发包流量Val4\n" +
			
			
			
			// Top收包处理时间 0
			"TopProcessTimeId0\t%d\tTop收包处理时间Id0\nTopProcessTimeVal0\t%d\tTop收包处理时间Val0\n" +
			
			// Top收包处理时间 1
			"TopProcessTimeId1\t%d\tTop收包处理时间Id1\nTopProcessTimeVal1\t%d\tTop收包处理时间Val1\n" +
			
			// Top收包处理时间 2
			"TopProcessTimeId2\t%d\tTop收包处理时间Id2\nTopProcessTimeVal2\t%d\tTop收包处理时间Val2\n" +
			
			// Top收包处理时间 3
			"TopProcessTimeId3\t%d\tTop收包处理时间Id3\nTopProcessTimeVal3\t%d\tTop收包处理时间Val3\n" +
			
			// Top收包处理时间 4
			"TopProcessTimeId4\t%d\tTop收包处理时间Id4\nTopProcessTimeVal4\t%d\tTop收包处理时间Val4\n" +
			
			
			
			"\n"
			
			, time
			
			// Session数目
			, SessionNum
			
			// 玩家数目
			, PlayerNum
			
			// Active玩家数目
			, ActivePlayerNum
			
			// join玩家数目
			, JoinNum
			
			// leave玩家数目
			, LeaveNum
			
			// call玩家数目
			, CallNum
			
			// kick玩家数目
			, KickNum
			
			// rejoin玩家数目
			, RejoinNum
			
			// sync玩家数目
			, SyncNum
			
			// swap玩家数目
			, SwapNum
			
			// 删除player数目
			, DeleteInactivePlayerNum
			
			// 删除session数目
			, DeleteInactiveSessionNum
			
			// 收包数目
			, RecvPacketNum
			
			// 发包数目
			, SendPacketNum
			
			// 收包流量
			, RecvSizeNum
			
			// 发包流量
			, SendSizeNum
			
			// Top收包处理时间
			, ProcessTime
			
			
			
			// 各个房间的玩家数目 0
			, TablePlayerNum[0]
			
			// 各个房间的玩家数目 1
			, TablePlayerNum[1]
			
			
			
			// 各个房间的Active玩家数目 0
			, TableActivePlayerNum[0]
			
			// 各个房间的Active玩家数目 1
			, TableActivePlayerNum[1]
			
			
			
			
			// Top收包数目 0
			, uTopRecvPacketNumId[0], uTopRecvPacketNumVal[0]
			
			// Top收包数目 1
			, uTopRecvPacketNumId[1], uTopRecvPacketNumVal[1]
			
			// Top收包数目 2
			, uTopRecvPacketNumId[2], uTopRecvPacketNumVal[2]
			
			// Top收包数目 3
			, uTopRecvPacketNumId[3], uTopRecvPacketNumVal[3]
			
			// Top收包数目 4
			, uTopRecvPacketNumId[4], uTopRecvPacketNumVal[4]
			
			
			
			// Top发包数目 0
			, uTopSendPacketNumId[0], uTopSendPacketNumVal[0]
			
			// Top发包数目 1
			, uTopSendPacketNumId[1], uTopSendPacketNumVal[1]
			
			// Top发包数目 2
			, uTopSendPacketNumId[2], uTopSendPacketNumVal[2]
			
			// Top发包数目 3
			, uTopSendPacketNumId[3], uTopSendPacketNumVal[3]
			
			// Top发包数目 4
			, uTopSendPacketNumId[4], uTopSendPacketNumVal[4]
			
			
			
			// Top收包流量 0
			, uTopRecvSizeNumId[0], uTopRecvSizeNumVal[0]
			
			// Top收包流量 1
			, uTopRecvSizeNumId[1], uTopRecvSizeNumVal[1]
			
			// Top收包流量 2
			, uTopRecvSizeNumId[2], uTopRecvSizeNumVal[2]
			
			// Top收包流量 3
			, uTopRecvSizeNumId[3], uTopRecvSizeNumVal[3]
			
			// Top收包流量 4
			, uTopRecvSizeNumId[4], uTopRecvSizeNumVal[4]
			
			
			
			// Top发包流量 0
			, uTopSendSizeNumId[0], uTopSendSizeNumVal[0]
			
			// Top发包流量 1
			, uTopSendSizeNumId[1], uTopSendSizeNumVal[1]
			
			// Top发包流量 2
			, uTopSendSizeNumId[2], uTopSendSizeNumVal[2]
			
			// Top发包流量 3
			, uTopSendSizeNumId[3], uTopSendSizeNumVal[3]
			
			// Top发包流量 4
			, uTopSendSizeNumId[4], uTopSendSizeNumVal[4]
			
			
			
			// Top收包处理时间 0
			, uTopProcessTimeId[0], uTopProcessTimeVal[0]
			
			// Top收包处理时间 1
			, uTopProcessTimeId[1], uTopProcessTimeVal[1]
			
			// Top收包处理时间 2
			, uTopProcessTimeId[2], uTopProcessTimeVal[2]
			
			// Top收包处理时间 3
			, uTopProcessTimeId[3], uTopProcessTimeVal[3]
			
			// Top收包处理时间 4
			, uTopProcessTimeId[4], uTopProcessTimeVal[4]
			
			
			
			);
			
		clear();
		
		try
		{
			FileOutputStream out = new FileOutputStream(file, true);
			out.write(str.toString().getBytes("utf-8"));
			out.close();
		}
		catch (IOException e)
		{
			e.printStackTrace();
			return;
		}
		
	}
    
}

