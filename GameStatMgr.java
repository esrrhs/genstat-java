/* This file is generated by genstat. */
/* No manual modification is permitted. */

package com.netease.game.stat;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

  
// gameserver统计结构
public class GameStatMgr
{
	private static GameStatMgr instance;
	
    
    // 桌子数目
    private int TableInfoMapNum;
    
    // 桌子数目
    private int PlayerInfoMapNum;
    
    // 桌子上的玩家数目
    private int PlayerNum;
    
    // 桌子数目
    private int RoomInfoMapNum;
    
    // 桌子数目
    private int RoutinesNum;
    
    // 桌子数目
    private int UserIdToSessionIdNum;
    
    // 开局的桌子
    private int BeginNum;
    
    // 结算的桌子
    private int EndNum;
    
    // 异常的桌子
    private int ExceptionNum;
    
    // 请求分桌数目
    private int JoinNum;
    
    // 分桌失败数目
    private int JoinFailNum;
    
    // 分桌多次失败的数目
    private int JoinMaxFailNum;
    
    // 分桌无playerinfo失败的数目
    private int JoinNoInfoFailNum;
    
    // 分桌不同设备失败的数目
    private int JoinDiffFailNum;
    
    // 分桌无routine失败的数目
    private int JoinNoRoutineFailNum;
    
    // 分桌失败的数目
    private int JoinChooseTableFailNum;
    
    // 分座位失败的数目
    private int JoinChooseSeatFailNum;
    
    // 分桌关服失败的数目
    private int JoinOffFailNum;
    
    // 分桌校验失败的数目
    private int JoinTokenFailNum;
    
    // 分桌金币失败的数目
    private int JoinCoinsFailNum;
    
    // 分桌锁定失败的数目
    private int JoinLockFailNum;
    
    // 分桌封禁失败的数目
    private int JoinForbiddenFailNum;
    
    // 分桌关服失败的数目
    private int JoinCloseFailNum;
    
    // 分到老桌数目
    private int JoinExistNum;
    
    // 分到新桌数目
    private int JoinNewNum;
    
    // 删除player数目
    private int DeleteInactivePlayerNum;
    
    // 删除session数目
    private int DeleteInactiveSessionNum;
    
    // 删除routine数目
    private int DeleteInactiveRoutineNum;
    
    // 收包数目
    private int RecvPacketNum;
    
    // 发包数目
    private int SendPacketNum;
    
    // 收包流量
    private int RecvSizeNum;
    
    // 发包流量
    private int SendSizeNum;
    
    // Top收包处理时间
    private int ProcessTime;
    
    // 所有的发包数目
    private int AllSendPacketNum;
    
    // 所有的发包流量
    private int AllSendSizeNum;
    
    
    // 各个房间的桌子数目
    private int[] RoomTableNum = new int[30];
    
    // 桌子各状态数目
    private int[] RoutineStateNum = new int[10];
    
    // 桌子各人数数目
    private int[] TableSeatsNum = new int[6];
    
    
    // Top收包数目
    private int[] TopRecvPacketNum = new int[50];
    
    // Top发包数目
    private int[] TopSendPacketNum = new int[50];
    
    // Top收包流量
    private int[] TopRecvSizeNum = new int[50];
    
    // Top发包流量
    private int[] TopSendSizeNum = new int[50];
    
    // Top收包处理时间
    private int[] TopProcessTime = new int[50];
    
    // Top所有的发包数目
    private int[] TopAllSendPacketNum = new int[20];
    
    // Top所有的发包流量
    private int[] TopAllSendSizeNum = new int[20];
        
        
	
	// gameserver统计结构
    public GameStatMgr()
	{
		clear();
	}
	
	public static GameStatMgr instance()
	{
		if (instance == null)
		{
			synchronized (GameStatMgr.class)
			{
				if (instance == null)
				{
					instance = new GameStatMgr();
					return instance;
				}
			}
		}
		return instance;
	}
	
	public void sortArray(int[] src, int[] desId, int[] desVal, boolean isMax)
	{
		int srcSize = src.length;
		int desSize = desId.length;
		if (isMax)
		{
			for (int i = 0; i < desSize; i++)
			{
				desId[i] = 0;
				desVal[i] = 0;
				int max = 0;
				for (int j = 0; j < srcSize; j++)
				{
					if (src[j] > max)
					{
						desId[i] = j;
						desVal[i] = src[j];
						max = src[j];
					}
				}
				src[desId[i]] = 0;
			}
		}
		else
		{
			for (int i = 0; i < desSize; i++)
			{
				desId[i] = 0;
				desVal[i] = 0;
				int min = 0xFFFFFFFF;
				for (int j = 0; j < srcSize; j++)
				{
					if (src[j] < min && src[j] > 0)
					{
						desId[i] = j;
						desVal[i] = src[j];
						min = src[j];
					}
				}
				src[desId[i]] = 0xFFFFFFFF;
			}
		}
	}

	public void sortHashMap(ConcurrentHashMap<Integer, Integer> map, int[] desId, int[] desVal, boolean isMax)
	{
		int desSize = desId.length;
		if (isMax)
		{
			for (int i = 0; i < desSize; i++)
			{
				desId[i] = 0;
				desVal[i] = 0;
				int max = 0;
				for (Map.Entry<Integer, Integer> e : map.entrySet())
				{
					if (e.getValue() > max)
					{
						desId[i] = e.getKey();
						desVal[i] = e.getValue();
						max = e.getValue();
					}
				}
				if (map.containsKey(desId[i]))
				{
					map.put(desId[i], 0);
				}
			}
		}
		else
		{
			for (int i = 0; i < desSize; i++)
			{
				desId[i] = 0;
				desVal[i] = 0;
				int min = 0xFFFFFFFF;
				for (Map.Entry<Integer, Integer> e : map.entrySet())
				{
					if (e.getValue() < min && e.getValue() > 0)
					{
						desId[i] = e.getKey();
						desVal[i] = e.getValue();
						min = e.getValue();
					}
				}
				if (map.containsKey(desId[i]))
				{
					map.put(desId[i], 0);
				}
			}
		}
	}
		
    
    // get 桌子数目
    public int getTableInfoMapNum()
    {
        return TableInfoMapNum;
    }
    
    // set 桌子数目
    public void setTableInfoMapNum(int _TableInfoMapNum)
    {
        TableInfoMapNum = _TableInfoMapNum;
    }
    
    // add 桌子数目
    public void addTableInfoMapNum(int _TableInfoMapNum)
    {
        TableInfoMapNum += _TableInfoMapNum;
    }
    
    // get 桌子数目
    public int getPlayerInfoMapNum()
    {
        return PlayerInfoMapNum;
    }
    
    // set 桌子数目
    public void setPlayerInfoMapNum(int _PlayerInfoMapNum)
    {
        PlayerInfoMapNum = _PlayerInfoMapNum;
    }
    
    // add 桌子数目
    public void addPlayerInfoMapNum(int _PlayerInfoMapNum)
    {
        PlayerInfoMapNum += _PlayerInfoMapNum;
    }
    
    // get 桌子上的玩家数目
    public int getPlayerNum()
    {
        return PlayerNum;
    }
    
    // set 桌子上的玩家数目
    public void setPlayerNum(int _PlayerNum)
    {
        PlayerNum = _PlayerNum;
    }
    
    // add 桌子上的玩家数目
    public void addPlayerNum(int _PlayerNum)
    {
        PlayerNum += _PlayerNum;
    }
    
    // get 桌子数目
    public int getRoomInfoMapNum()
    {
        return RoomInfoMapNum;
    }
    
    // set 桌子数目
    public void setRoomInfoMapNum(int _RoomInfoMapNum)
    {
        RoomInfoMapNum = _RoomInfoMapNum;
    }
    
    // add 桌子数目
    public void addRoomInfoMapNum(int _RoomInfoMapNum)
    {
        RoomInfoMapNum += _RoomInfoMapNum;
    }
    
    // get 桌子数目
    public int getRoutinesNum()
    {
        return RoutinesNum;
    }
    
    // set 桌子数目
    public void setRoutinesNum(int _RoutinesNum)
    {
        RoutinesNum = _RoutinesNum;
    }
    
    // add 桌子数目
    public void addRoutinesNum(int _RoutinesNum)
    {
        RoutinesNum += _RoutinesNum;
    }
    
    // get 桌子数目
    public int getUserIdToSessionIdNum()
    {
        return UserIdToSessionIdNum;
    }
    
    // set 桌子数目
    public void setUserIdToSessionIdNum(int _UserIdToSessionIdNum)
    {
        UserIdToSessionIdNum = _UserIdToSessionIdNum;
    }
    
    // add 桌子数目
    public void addUserIdToSessionIdNum(int _UserIdToSessionIdNum)
    {
        UserIdToSessionIdNum += _UserIdToSessionIdNum;
    }
    
    // get 开局的桌子
    public int getBeginNum()
    {
        return BeginNum;
    }
    
    // set 开局的桌子
    public void setBeginNum(int _BeginNum)
    {
        BeginNum = _BeginNum;
    }
    
    // add 开局的桌子
    public void addBeginNum(int _BeginNum)
    {
        BeginNum += _BeginNum;
    }
    
    // get 结算的桌子
    public int getEndNum()
    {
        return EndNum;
    }
    
    // set 结算的桌子
    public void setEndNum(int _EndNum)
    {
        EndNum = _EndNum;
    }
    
    // add 结算的桌子
    public void addEndNum(int _EndNum)
    {
        EndNum += _EndNum;
    }
    
    // get 异常的桌子
    public int getExceptionNum()
    {
        return ExceptionNum;
    }
    
    // set 异常的桌子
    public void setExceptionNum(int _ExceptionNum)
    {
        ExceptionNum = _ExceptionNum;
    }
    
    // add 异常的桌子
    public void addExceptionNum(int _ExceptionNum)
    {
        ExceptionNum += _ExceptionNum;
    }
    
    // get 请求分桌数目
    public int getJoinNum()
    {
        return JoinNum;
    }
    
    // set 请求分桌数目
    public void setJoinNum(int _JoinNum)
    {
        JoinNum = _JoinNum;
    }
    
    // add 请求分桌数目
    public void addJoinNum(int _JoinNum)
    {
        JoinNum += _JoinNum;
    }
    
    // get 分桌失败数目
    public int getJoinFailNum()
    {
        return JoinFailNum;
    }
    
    // set 分桌失败数目
    public void setJoinFailNum(int _JoinFailNum)
    {
        JoinFailNum = _JoinFailNum;
    }
    
    // add 分桌失败数目
    public void addJoinFailNum(int _JoinFailNum)
    {
        JoinFailNum += _JoinFailNum;
    }
    
    // get 分桌多次失败的数目
    public int getJoinMaxFailNum()
    {
        return JoinMaxFailNum;
    }
    
    // set 分桌多次失败的数目
    public void setJoinMaxFailNum(int _JoinMaxFailNum)
    {
        JoinMaxFailNum = _JoinMaxFailNum;
    }
    
    // add 分桌多次失败的数目
    public void addJoinMaxFailNum(int _JoinMaxFailNum)
    {
        JoinMaxFailNum += _JoinMaxFailNum;
    }
    
    // get 分桌无playerinfo失败的数目
    public int getJoinNoInfoFailNum()
    {
        return JoinNoInfoFailNum;
    }
    
    // set 分桌无playerinfo失败的数目
    public void setJoinNoInfoFailNum(int _JoinNoInfoFailNum)
    {
        JoinNoInfoFailNum = _JoinNoInfoFailNum;
    }
    
    // add 分桌无playerinfo失败的数目
    public void addJoinNoInfoFailNum(int _JoinNoInfoFailNum)
    {
        JoinNoInfoFailNum += _JoinNoInfoFailNum;
    }
    
    // get 分桌不同设备失败的数目
    public int getJoinDiffFailNum()
    {
        return JoinDiffFailNum;
    }
    
    // set 分桌不同设备失败的数目
    public void setJoinDiffFailNum(int _JoinDiffFailNum)
    {
        JoinDiffFailNum = _JoinDiffFailNum;
    }
    
    // add 分桌不同设备失败的数目
    public void addJoinDiffFailNum(int _JoinDiffFailNum)
    {
        JoinDiffFailNum += _JoinDiffFailNum;
    }
    
    // get 分桌无routine失败的数目
    public int getJoinNoRoutineFailNum()
    {
        return JoinNoRoutineFailNum;
    }
    
    // set 分桌无routine失败的数目
    public void setJoinNoRoutineFailNum(int _JoinNoRoutineFailNum)
    {
        JoinNoRoutineFailNum = _JoinNoRoutineFailNum;
    }
    
    // add 分桌无routine失败的数目
    public void addJoinNoRoutineFailNum(int _JoinNoRoutineFailNum)
    {
        JoinNoRoutineFailNum += _JoinNoRoutineFailNum;
    }
    
    // get 分桌失败的数目
    public int getJoinChooseTableFailNum()
    {
        return JoinChooseTableFailNum;
    }
    
    // set 分桌失败的数目
    public void setJoinChooseTableFailNum(int _JoinChooseTableFailNum)
    {
        JoinChooseTableFailNum = _JoinChooseTableFailNum;
    }
    
    // add 分桌失败的数目
    public void addJoinChooseTableFailNum(int _JoinChooseTableFailNum)
    {
        JoinChooseTableFailNum += _JoinChooseTableFailNum;
    }
    
    // get 分座位失败的数目
    public int getJoinChooseSeatFailNum()
    {
        return JoinChooseSeatFailNum;
    }
    
    // set 分座位失败的数目
    public void setJoinChooseSeatFailNum(int _JoinChooseSeatFailNum)
    {
        JoinChooseSeatFailNum = _JoinChooseSeatFailNum;
    }
    
    // add 分座位失败的数目
    public void addJoinChooseSeatFailNum(int _JoinChooseSeatFailNum)
    {
        JoinChooseSeatFailNum += _JoinChooseSeatFailNum;
    }
    
    // get 分桌关服失败的数目
    public int getJoinOffFailNum()
    {
        return JoinOffFailNum;
    }
    
    // set 分桌关服失败的数目
    public void setJoinOffFailNum(int _JoinOffFailNum)
    {
        JoinOffFailNum = _JoinOffFailNum;
    }
    
    // add 分桌关服失败的数目
    public void addJoinOffFailNum(int _JoinOffFailNum)
    {
        JoinOffFailNum += _JoinOffFailNum;
    }
    
    // get 分桌校验失败的数目
    public int getJoinTokenFailNum()
    {
        return JoinTokenFailNum;
    }
    
    // set 分桌校验失败的数目
    public void setJoinTokenFailNum(int _JoinTokenFailNum)
    {
        JoinTokenFailNum = _JoinTokenFailNum;
    }
    
    // add 分桌校验失败的数目
    public void addJoinTokenFailNum(int _JoinTokenFailNum)
    {
        JoinTokenFailNum += _JoinTokenFailNum;
    }
    
    // get 分桌金币失败的数目
    public int getJoinCoinsFailNum()
    {
        return JoinCoinsFailNum;
    }
    
    // set 分桌金币失败的数目
    public void setJoinCoinsFailNum(int _JoinCoinsFailNum)
    {
        JoinCoinsFailNum = _JoinCoinsFailNum;
    }
    
    // add 分桌金币失败的数目
    public void addJoinCoinsFailNum(int _JoinCoinsFailNum)
    {
        JoinCoinsFailNum += _JoinCoinsFailNum;
    }
    
    // get 分桌锁定失败的数目
    public int getJoinLockFailNum()
    {
        return JoinLockFailNum;
    }
    
    // set 分桌锁定失败的数目
    public void setJoinLockFailNum(int _JoinLockFailNum)
    {
        JoinLockFailNum = _JoinLockFailNum;
    }
    
    // add 分桌锁定失败的数目
    public void addJoinLockFailNum(int _JoinLockFailNum)
    {
        JoinLockFailNum += _JoinLockFailNum;
    }
    
    // get 分桌封禁失败的数目
    public int getJoinForbiddenFailNum()
    {
        return JoinForbiddenFailNum;
    }
    
    // set 分桌封禁失败的数目
    public void setJoinForbiddenFailNum(int _JoinForbiddenFailNum)
    {
        JoinForbiddenFailNum = _JoinForbiddenFailNum;
    }
    
    // add 分桌封禁失败的数目
    public void addJoinForbiddenFailNum(int _JoinForbiddenFailNum)
    {
        JoinForbiddenFailNum += _JoinForbiddenFailNum;
    }
    
    // get 分桌关服失败的数目
    public int getJoinCloseFailNum()
    {
        return JoinCloseFailNum;
    }
    
    // set 分桌关服失败的数目
    public void setJoinCloseFailNum(int _JoinCloseFailNum)
    {
        JoinCloseFailNum = _JoinCloseFailNum;
    }
    
    // add 分桌关服失败的数目
    public void addJoinCloseFailNum(int _JoinCloseFailNum)
    {
        JoinCloseFailNum += _JoinCloseFailNum;
    }
    
    // get 分到老桌数目
    public int getJoinExistNum()
    {
        return JoinExistNum;
    }
    
    // set 分到老桌数目
    public void setJoinExistNum(int _JoinExistNum)
    {
        JoinExistNum = _JoinExistNum;
    }
    
    // add 分到老桌数目
    public void addJoinExistNum(int _JoinExistNum)
    {
        JoinExistNum += _JoinExistNum;
    }
    
    // get 分到新桌数目
    public int getJoinNewNum()
    {
        return JoinNewNum;
    }
    
    // set 分到新桌数目
    public void setJoinNewNum(int _JoinNewNum)
    {
        JoinNewNum = _JoinNewNum;
    }
    
    // add 分到新桌数目
    public void addJoinNewNum(int _JoinNewNum)
    {
        JoinNewNum += _JoinNewNum;
    }
    
    // get 删除player数目
    public int getDeleteInactivePlayerNum()
    {
        return DeleteInactivePlayerNum;
    }
    
    // set 删除player数目
    public void setDeleteInactivePlayerNum(int _DeleteInactivePlayerNum)
    {
        DeleteInactivePlayerNum = _DeleteInactivePlayerNum;
    }
    
    // add 删除player数目
    public void addDeleteInactivePlayerNum(int _DeleteInactivePlayerNum)
    {
        DeleteInactivePlayerNum += _DeleteInactivePlayerNum;
    }
    
    // get 删除session数目
    public int getDeleteInactiveSessionNum()
    {
        return DeleteInactiveSessionNum;
    }
    
    // set 删除session数目
    public void setDeleteInactiveSessionNum(int _DeleteInactiveSessionNum)
    {
        DeleteInactiveSessionNum = _DeleteInactiveSessionNum;
    }
    
    // add 删除session数目
    public void addDeleteInactiveSessionNum(int _DeleteInactiveSessionNum)
    {
        DeleteInactiveSessionNum += _DeleteInactiveSessionNum;
    }
    
    // get 删除routine数目
    public int getDeleteInactiveRoutineNum()
    {
        return DeleteInactiveRoutineNum;
    }
    
    // set 删除routine数目
    public void setDeleteInactiveRoutineNum(int _DeleteInactiveRoutineNum)
    {
        DeleteInactiveRoutineNum = _DeleteInactiveRoutineNum;
    }
    
    // add 删除routine数目
    public void addDeleteInactiveRoutineNum(int _DeleteInactiveRoutineNum)
    {
        DeleteInactiveRoutineNum += _DeleteInactiveRoutineNum;
    }
    
    // get 收包数目
    public int getRecvPacketNum()
    {
        return RecvPacketNum;
    }
    
    // set 收包数目
    public void setRecvPacketNum(int _RecvPacketNum)
    {
        RecvPacketNum = _RecvPacketNum;
    }
    
    // add 收包数目
    public void addRecvPacketNum(int _RecvPacketNum)
    {
        RecvPacketNum += _RecvPacketNum;
    }
    
    // get 发包数目
    public int getSendPacketNum()
    {
        return SendPacketNum;
    }
    
    // set 发包数目
    public void setSendPacketNum(int _SendPacketNum)
    {
        SendPacketNum = _SendPacketNum;
    }
    
    // add 发包数目
    public void addSendPacketNum(int _SendPacketNum)
    {
        SendPacketNum += _SendPacketNum;
    }
    
    // get 收包流量
    public int getRecvSizeNum()
    {
        return RecvSizeNum;
    }
    
    // set 收包流量
    public void setRecvSizeNum(int _RecvSizeNum)
    {
        RecvSizeNum = _RecvSizeNum;
    }
    
    // add 收包流量
    public void addRecvSizeNum(int _RecvSizeNum)
    {
        RecvSizeNum += _RecvSizeNum;
    }
    
    // get 发包流量
    public int getSendSizeNum()
    {
        return SendSizeNum;
    }
    
    // set 发包流量
    public void setSendSizeNum(int _SendSizeNum)
    {
        SendSizeNum = _SendSizeNum;
    }
    
    // add 发包流量
    public void addSendSizeNum(int _SendSizeNum)
    {
        SendSizeNum += _SendSizeNum;
    }
    
    // get Top收包处理时间
    public int getProcessTime()
    {
        return ProcessTime;
    }
    
    // set Top收包处理时间
    public void setProcessTime(int _ProcessTime)
    {
        ProcessTime = _ProcessTime;
    }
    
    // add Top收包处理时间
    public void addProcessTime(int _ProcessTime)
    {
        ProcessTime += _ProcessTime;
    }
    
    // get 所有的发包数目
    public int getAllSendPacketNum()
    {
        return AllSendPacketNum;
    }
    
    // set 所有的发包数目
    public void setAllSendPacketNum(int _AllSendPacketNum)
    {
        AllSendPacketNum = _AllSendPacketNum;
    }
    
    // add 所有的发包数目
    public void addAllSendPacketNum(int _AllSendPacketNum)
    {
        AllSendPacketNum += _AllSendPacketNum;
    }
    
    // get 所有的发包流量
    public int getAllSendSizeNum()
    {
        return AllSendSizeNum;
    }
    
    // set 所有的发包流量
    public void setAllSendSizeNum(int _AllSendSizeNum)
    {
        AllSendSizeNum = _AllSendSizeNum;
    }
    
    // add 所有的发包流量
    public void addAllSendSizeNum(int _AllSendSizeNum)
    {
        AllSendSizeNum += _AllSendSizeNum;
    }
    
    
         
	// set 各个房间的桌子数目
    public void setRoomTableNum(int index, int _RoomTableNum)
    {
		if (index >= 30)
        {
            return;
        }
        RoomTableNum[index] += _RoomTableNum;
    }
	
    // add 各个房间的桌子数目
    public void addRoomTableNum(int index, int _RoomTableNum)
    {
        if (index >= 30)
        {
            return;
        }
        RoomTableNum[index] += _RoomTableNum;
    }
         
	// set 桌子各状态数目
    public void setRoutineStateNum(int index, int _RoutineStateNum)
    {
		if (index >= 10)
        {
            return;
        }
        RoutineStateNum[index] += _RoutineStateNum;
    }
	
    // add 桌子各状态数目
    public void addRoutineStateNum(int index, int _RoutineStateNum)
    {
        if (index >= 10)
        {
            return;
        }
        RoutineStateNum[index] += _RoutineStateNum;
    }
         
	// set 桌子各人数数目
    public void setTableSeatsNum(int index, int _TableSeatsNum)
    {
		if (index >= 6)
        {
            return;
        }
        TableSeatsNum[index] += _TableSeatsNum;
    }
	
    // add 桌子各人数数目
    public void addTableSeatsNum(int index, int _TableSeatsNum)
    {
        if (index >= 6)
        {
            return;
        }
        TableSeatsNum[index] += _TableSeatsNum;
    }
    
	
          
	// set Top收包数目
    public void setTopRecvPacketNum(int index, int _TopRecvPacketNum)
    {
		if (index >= 50)
        {
            return;
        }
        TopRecvPacketNum[index] += _TopRecvPacketNum;
    }
	       
    // add Top收包数目
    public void addTopRecvPacketNum(int index, int _TopRecvPacketNum)
    {
        if (index >= 50)
        {
            return;
        }
        TopRecvPacketNum[index] += _TopRecvPacketNum;
    }
          
	// set Top发包数目
    public void setTopSendPacketNum(int index, int _TopSendPacketNum)
    {
		if (index >= 50)
        {
            return;
        }
        TopSendPacketNum[index] += _TopSendPacketNum;
    }
	       
    // add Top发包数目
    public void addTopSendPacketNum(int index, int _TopSendPacketNum)
    {
        if (index >= 50)
        {
            return;
        }
        TopSendPacketNum[index] += _TopSendPacketNum;
    }
          
	// set Top收包流量
    public void setTopRecvSizeNum(int index, int _TopRecvSizeNum)
    {
		if (index >= 50)
        {
            return;
        }
        TopRecvSizeNum[index] += _TopRecvSizeNum;
    }
	       
    // add Top收包流量
    public void addTopRecvSizeNum(int index, int _TopRecvSizeNum)
    {
        if (index >= 50)
        {
            return;
        }
        TopRecvSizeNum[index] += _TopRecvSizeNum;
    }
          
	// set Top发包流量
    public void setTopSendSizeNum(int index, int _TopSendSizeNum)
    {
		if (index >= 50)
        {
            return;
        }
        TopSendSizeNum[index] += _TopSendSizeNum;
    }
	       
    // add Top发包流量
    public void addTopSendSizeNum(int index, int _TopSendSizeNum)
    {
        if (index >= 50)
        {
            return;
        }
        TopSendSizeNum[index] += _TopSendSizeNum;
    }
          
	// set Top收包处理时间
    public void setTopProcessTime(int index, int _TopProcessTime)
    {
		if (index >= 50)
        {
            return;
        }
        TopProcessTime[index] += _TopProcessTime;
    }
	       
    // add Top收包处理时间
    public void addTopProcessTime(int index, int _TopProcessTime)
    {
        if (index >= 50)
        {
            return;
        }
        TopProcessTime[index] += _TopProcessTime;
    }
          
	// set Top所有的发包数目
    public void setTopAllSendPacketNum(int index, int _TopAllSendPacketNum)
    {
		if (index >= 20)
        {
            return;
        }
        TopAllSendPacketNum[index] += _TopAllSendPacketNum;
    }
	       
    // add Top所有的发包数目
    public void addTopAllSendPacketNum(int index, int _TopAllSendPacketNum)
    {
        if (index >= 20)
        {
            return;
        }
        TopAllSendPacketNum[index] += _TopAllSendPacketNum;
    }
          
	// set Top所有的发包流量
    public void setTopAllSendSizeNum(int index, int _TopAllSendSizeNum)
    {
		if (index >= 20)
        {
            return;
        }
        TopAllSendSizeNum[index] += _TopAllSendSizeNum;
    }
	       
    // add Top所有的发包流量
    public void addTopAllSendSizeNum(int index, int _TopAllSendSizeNum)
    {
        if (index >= 20)
        {
            return;
        }
        TopAllSendSizeNum[index] += _TopAllSendSizeNum;
    }
    
	
    
    
    public void clear()
	{
		
		// 桌子数目
		TableInfoMapNum = 0;
		
		// 桌子数目
		PlayerInfoMapNum = 0;
		
		// 桌子上的玩家数目
		PlayerNum = 0;
		
		// 桌子数目
		RoomInfoMapNum = 0;
		
		// 桌子数目
		RoutinesNum = 0;
		
		// 桌子数目
		UserIdToSessionIdNum = 0;
		
		// 开局的桌子
		BeginNum = 0;
		
		// 结算的桌子
		EndNum = 0;
		
		// 异常的桌子
		ExceptionNum = 0;
		
		// 请求分桌数目
		JoinNum = 0;
		
		// 分桌失败数目
		JoinFailNum = 0;
		
		// 分桌多次失败的数目
		JoinMaxFailNum = 0;
		
		// 分桌无playerinfo失败的数目
		JoinNoInfoFailNum = 0;
		
		// 分桌不同设备失败的数目
		JoinDiffFailNum = 0;
		
		// 分桌无routine失败的数目
		JoinNoRoutineFailNum = 0;
		
		// 分桌失败的数目
		JoinChooseTableFailNum = 0;
		
		// 分座位失败的数目
		JoinChooseSeatFailNum = 0;
		
		// 分桌关服失败的数目
		JoinOffFailNum = 0;
		
		// 分桌校验失败的数目
		JoinTokenFailNum = 0;
		
		// 分桌金币失败的数目
		JoinCoinsFailNum = 0;
		
		// 分桌锁定失败的数目
		JoinLockFailNum = 0;
		
		// 分桌封禁失败的数目
		JoinForbiddenFailNum = 0;
		
		// 分桌关服失败的数目
		JoinCloseFailNum = 0;
		
		// 分到老桌数目
		JoinExistNum = 0;
		
		// 分到新桌数目
		JoinNewNum = 0;
		
		// 删除player数目
		DeleteInactivePlayerNum = 0;
		
		// 删除session数目
		DeleteInactiveSessionNum = 0;
		
		// 删除routine数目
		DeleteInactiveRoutineNum = 0;
		
		// 收包数目
		RecvPacketNum = 0;
		
		// 发包数目
		SendPacketNum = 0;
		
		// 收包流量
		RecvSizeNum = 0;
		
		// 发包流量
		SendSizeNum = 0;
		
		// Top收包处理时间
		ProcessTime = 0;
		
		// 所有的发包数目
		AllSendPacketNum = 0;
		
		// 所有的发包流量
		AllSendSizeNum = 0;
		
		
		// 各个房间的桌子数目
		for (int i = 0; i < RoomTableNum.length; i++)
		{
			RoomTableNum[i] = 0;
		}
		
		// 桌子各状态数目
		for (int i = 0; i < RoutineStateNum.length; i++)
		{
			RoutineStateNum[i] = 0;
		}
		
		// 桌子各人数数目
		for (int i = 0; i < TableSeatsNum.length; i++)
		{
			TableSeatsNum[i] = 0;
		}
		
		
		// Top收包数目
		for (int i = 0; i < TopRecvPacketNum.length; i++)
		{
			TopRecvPacketNum[i] = 0;
		}
		
		// Top发包数目
		for (int i = 0; i < TopSendPacketNum.length; i++)
		{
			TopSendPacketNum[i] = 0;
		}
		
		// Top收包流量
		for (int i = 0; i < TopRecvSizeNum.length; i++)
		{
			TopRecvSizeNum[i] = 0;
		}
		
		// Top发包流量
		for (int i = 0; i < TopSendSizeNum.length; i++)
		{
			TopSendSizeNum[i] = 0;
		}
		
		// Top收包处理时间
		for (int i = 0; i < TopProcessTime.length; i++)
		{
			TopProcessTime[i] = 0;
		}
		
		// Top所有的发包数目
		for (int i = 0; i < TopAllSendPacketNum.length; i++)
		{
			TopAllSendPacketNum[i] = 0;
		}
		
		// Top所有的发包流量
		for (int i = 0; i < TopAllSendSizeNum.length; i++)
		{
			TopAllSendSizeNum[i] = 0;
		}
		
		
	}

    public void printLog(String strFile)
	{
		File file = null;
		try
		{
			file = new File("log/");
			if (!file.exists())
			{
				file.mkdirs();
			}
			file = new File("log/" + strFile);
			if (!file.exists())
			{
				file.createNewFile();
			}
		}
		catch (IOException e)
		{
			e.printStackTrace();
			return;
		}
		
		Date date = new Date();
		DateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String time = format.format(date);

		
		// Top收包数目
		int[] uTopRecvPacketNumId = new int[5];
		int[] uTopRecvPacketNumVal = new int[5];
		sortArray(TopRecvPacketNum, uTopRecvPacketNumId, uTopRecvPacketNumVal, true);
		
		// Top发包数目
		int[] uTopSendPacketNumId = new int[5];
		int[] uTopSendPacketNumVal = new int[5];
		sortArray(TopSendPacketNum, uTopSendPacketNumId, uTopSendPacketNumVal, true);
		
		// Top收包流量
		int[] uTopRecvSizeNumId = new int[5];
		int[] uTopRecvSizeNumVal = new int[5];
		sortArray(TopRecvSizeNum, uTopRecvSizeNumId, uTopRecvSizeNumVal, true);
		
		// Top发包流量
		int[] uTopSendSizeNumId = new int[5];
		int[] uTopSendSizeNumVal = new int[5];
		sortArray(TopSendSizeNum, uTopSendSizeNumId, uTopSendSizeNumVal, true);
		
		// Top收包处理时间
		int[] uTopProcessTimeId = new int[5];
		int[] uTopProcessTimeVal = new int[5];
		sortArray(TopProcessTime, uTopProcessTimeId, uTopProcessTimeVal, true);
		
		// Top所有的发包数目
		int[] uTopAllSendPacketNumId = new int[5];
		int[] uTopAllSendPacketNumVal = new int[5];
		sortArray(TopAllSendPacketNum, uTopAllSendPacketNumId, uTopAllSendPacketNumVal, true);
		
		// Top所有的发包流量
		int[] uTopAllSendSizeNumId = new int[5];
		int[] uTopAllSendSizeNumVal = new int[5];
		sortArray(TopAllSendSizeNum, uTopAllSendSizeNumId, uTopAllSendSizeNumVal, true);
		
		
		
		String str = String.format("=============================%s=============================\n" +
			
			// 桌子数目
			"TableInfoMapNum\t%d\t桌子数目\n" +
			
			// 桌子数目
			"PlayerInfoMapNum\t%d\t桌子数目\n" +
			
			// 桌子上的玩家数目
			"PlayerNum\t%d\t桌子上的玩家数目\n" +
			
			// 桌子数目
			"RoomInfoMapNum\t%d\t桌子数目\n" +
			
			// 桌子数目
			"RoutinesNum\t%d\t桌子数目\n" +
			
			// 桌子数目
			"UserIdToSessionIdNum\t%d\t桌子数目\n" +
			
			// 开局的桌子
			"BeginNum\t%d\t开局的桌子\n" +
			
			// 结算的桌子
			"EndNum\t%d\t结算的桌子\n" +
			
			// 异常的桌子
			"ExceptionNum\t%d\t异常的桌子\n" +
			
			// 请求分桌数目
			"JoinNum\t%d\t请求分桌数目\n" +
			
			// 分桌失败数目
			"JoinFailNum\t%d\t分桌失败数目\n" +
			
			// 分桌多次失败的数目
			"JoinMaxFailNum\t%d\t分桌多次失败的数目\n" +
			
			// 分桌无playerinfo失败的数目
			"JoinNoInfoFailNum\t%d\t分桌无playerinfo失败的数目\n" +
			
			// 分桌不同设备失败的数目
			"JoinDiffFailNum\t%d\t分桌不同设备失败的数目\n" +
			
			// 分桌无routine失败的数目
			"JoinNoRoutineFailNum\t%d\t分桌无routine失败的数目\n" +
			
			// 分桌失败的数目
			"JoinChooseTableFailNum\t%d\t分桌失败的数目\n" +
			
			// 分座位失败的数目
			"JoinChooseSeatFailNum\t%d\t分座位失败的数目\n" +
			
			// 分桌关服失败的数目
			"JoinOffFailNum\t%d\t分桌关服失败的数目\n" +
			
			// 分桌校验失败的数目
			"JoinTokenFailNum\t%d\t分桌校验失败的数目\n" +
			
			// 分桌金币失败的数目
			"JoinCoinsFailNum\t%d\t分桌金币失败的数目\n" +
			
			// 分桌锁定失败的数目
			"JoinLockFailNum\t%d\t分桌锁定失败的数目\n" +
			
			// 分桌封禁失败的数目
			"JoinForbiddenFailNum\t%d\t分桌封禁失败的数目\n" +
			
			// 分桌关服失败的数目
			"JoinCloseFailNum\t%d\t分桌关服失败的数目\n" +
			
			// 分到老桌数目
			"JoinExistNum\t%d\t分到老桌数目\n" +
			
			// 分到新桌数目
			"JoinNewNum\t%d\t分到新桌数目\n" +
			
			// 删除player数目
			"DeleteInactivePlayerNum\t%d\t删除player数目\n" +
			
			// 删除session数目
			"DeleteInactiveSessionNum\t%d\t删除session数目\n" +
			
			// 删除routine数目
			"DeleteInactiveRoutineNum\t%d\t删除routine数目\n" +
			
			// 收包数目
			"RecvPacketNum\t%d\t收包数目\n" +
			
			// 发包数目
			"SendPacketNum\t%d\t发包数目\n" +
			
			// 收包流量
			"RecvSizeNum\t%d\t收包流量\n" +
			
			// 发包流量
			"SendSizeNum\t%d\t发包流量\n" +
			
			// Top收包处理时间
			"ProcessTime\t%d\tTop收包处理时间\n" +
			
			// 所有的发包数目
			"AllSendPacketNum\t%d\t所有的发包数目\n" +
			
			// 所有的发包流量
			"AllSendSizeNum\t%d\t所有的发包流量\n" +
			
			
			
			// 各个房间的桌子数目 0
			"RoomTableNum0\t%d\t各个房间的桌子数目0\n" +
			
			// 各个房间的桌子数目 1
			"RoomTableNum1\t%d\t各个房间的桌子数目1\n" +
			
			// 各个房间的桌子数目 2
			"RoomTableNum2\t%d\t各个房间的桌子数目2\n" +
			
			// 各个房间的桌子数目 3
			"RoomTableNum3\t%d\t各个房间的桌子数目3\n" +
			
			// 各个房间的桌子数目 4
			"RoomTableNum4\t%d\t各个房间的桌子数目4\n" +
			
			// 各个房间的桌子数目 5
			"RoomTableNum5\t%d\t各个房间的桌子数目5\n" +
			
			// 各个房间的桌子数目 6
			"RoomTableNum6\t%d\t各个房间的桌子数目6\n" +
			
			// 各个房间的桌子数目 7
			"RoomTableNum7\t%d\t各个房间的桌子数目7\n" +
			
			// 各个房间的桌子数目 8
			"RoomTableNum8\t%d\t各个房间的桌子数目8\n" +
			
			// 各个房间的桌子数目 9
			"RoomTableNum9\t%d\t各个房间的桌子数目9\n" +
			
			// 各个房间的桌子数目 10
			"RoomTableNum10\t%d\t各个房间的桌子数目10\n" +
			
			// 各个房间的桌子数目 11
			"RoomTableNum11\t%d\t各个房间的桌子数目11\n" +
			
			// 各个房间的桌子数目 12
			"RoomTableNum12\t%d\t各个房间的桌子数目12\n" +
			
			// 各个房间的桌子数目 13
			"RoomTableNum13\t%d\t各个房间的桌子数目13\n" +
			
			// 各个房间的桌子数目 14
			"RoomTableNum14\t%d\t各个房间的桌子数目14\n" +
			
			// 各个房间的桌子数目 15
			"RoomTableNum15\t%d\t各个房间的桌子数目15\n" +
			
			// 各个房间的桌子数目 16
			"RoomTableNum16\t%d\t各个房间的桌子数目16\n" +
			
			// 各个房间的桌子数目 17
			"RoomTableNum17\t%d\t各个房间的桌子数目17\n" +
			
			// 各个房间的桌子数目 18
			"RoomTableNum18\t%d\t各个房间的桌子数目18\n" +
			
			// 各个房间的桌子数目 19
			"RoomTableNum19\t%d\t各个房间的桌子数目19\n" +
			
			// 各个房间的桌子数目 20
			"RoomTableNum20\t%d\t各个房间的桌子数目20\n" +
			
			// 各个房间的桌子数目 21
			"RoomTableNum21\t%d\t各个房间的桌子数目21\n" +
			
			// 各个房间的桌子数目 22
			"RoomTableNum22\t%d\t各个房间的桌子数目22\n" +
			
			// 各个房间的桌子数目 23
			"RoomTableNum23\t%d\t各个房间的桌子数目23\n" +
			
			// 各个房间的桌子数目 24
			"RoomTableNum24\t%d\t各个房间的桌子数目24\n" +
			
			// 各个房间的桌子数目 25
			"RoomTableNum25\t%d\t各个房间的桌子数目25\n" +
			
			// 各个房间的桌子数目 26
			"RoomTableNum26\t%d\t各个房间的桌子数目26\n" +
			
			// 各个房间的桌子数目 27
			"RoomTableNum27\t%d\t各个房间的桌子数目27\n" +
			
			// 各个房间的桌子数目 28
			"RoomTableNum28\t%d\t各个房间的桌子数目28\n" +
			
			// 各个房间的桌子数目 29
			"RoomTableNum29\t%d\t各个房间的桌子数目29\n" +
			
			
			
			// 桌子各状态数目 0
			"RoutineStateNum0\t%d\t桌子各状态数目0\n" +
			
			// 桌子各状态数目 1
			"RoutineStateNum1\t%d\t桌子各状态数目1\n" +
			
			// 桌子各状态数目 2
			"RoutineStateNum2\t%d\t桌子各状态数目2\n" +
			
			// 桌子各状态数目 3
			"RoutineStateNum3\t%d\t桌子各状态数目3\n" +
			
			// 桌子各状态数目 4
			"RoutineStateNum4\t%d\t桌子各状态数目4\n" +
			
			// 桌子各状态数目 5
			"RoutineStateNum5\t%d\t桌子各状态数目5\n" +
			
			// 桌子各状态数目 6
			"RoutineStateNum6\t%d\t桌子各状态数目6\n" +
			
			// 桌子各状态数目 7
			"RoutineStateNum7\t%d\t桌子各状态数目7\n" +
			
			// 桌子各状态数目 8
			"RoutineStateNum8\t%d\t桌子各状态数目8\n" +
			
			// 桌子各状态数目 9
			"RoutineStateNum9\t%d\t桌子各状态数目9\n" +
			
			
			
			// 桌子各人数数目 0
			"TableSeatsNum0\t%d\t桌子各人数数目0\n" +
			
			// 桌子各人数数目 1
			"TableSeatsNum1\t%d\t桌子各人数数目1\n" +
			
			// 桌子各人数数目 2
			"TableSeatsNum2\t%d\t桌子各人数数目2\n" +
			
			// 桌子各人数数目 3
			"TableSeatsNum3\t%d\t桌子各人数数目3\n" +
			
			// 桌子各人数数目 4
			"TableSeatsNum4\t%d\t桌子各人数数目4\n" +
			
			// 桌子各人数数目 5
			"TableSeatsNum5\t%d\t桌子各人数数目5\n" +
			
			
			
			
			// Top收包数目 0
			"TopRecvPacketNumId0\t%d\tTop收包数目Id0\nTopRecvPacketNumVal0\t%d\tTop收包数目Val0\n" +
			
			// Top收包数目 1
			"TopRecvPacketNumId1\t%d\tTop收包数目Id1\nTopRecvPacketNumVal1\t%d\tTop收包数目Val1\n" +
			
			// Top收包数目 2
			"TopRecvPacketNumId2\t%d\tTop收包数目Id2\nTopRecvPacketNumVal2\t%d\tTop收包数目Val2\n" +
			
			// Top收包数目 3
			"TopRecvPacketNumId3\t%d\tTop收包数目Id3\nTopRecvPacketNumVal3\t%d\tTop收包数目Val3\n" +
			
			// Top收包数目 4
			"TopRecvPacketNumId4\t%d\tTop收包数目Id4\nTopRecvPacketNumVal4\t%d\tTop收包数目Val4\n" +
			
			
			
			// Top发包数目 0
			"TopSendPacketNumId0\t%d\tTop发包数目Id0\nTopSendPacketNumVal0\t%d\tTop发包数目Val0\n" +
			
			// Top发包数目 1
			"TopSendPacketNumId1\t%d\tTop发包数目Id1\nTopSendPacketNumVal1\t%d\tTop发包数目Val1\n" +
			
			// Top发包数目 2
			"TopSendPacketNumId2\t%d\tTop发包数目Id2\nTopSendPacketNumVal2\t%d\tTop发包数目Val2\n" +
			
			// Top发包数目 3
			"TopSendPacketNumId3\t%d\tTop发包数目Id3\nTopSendPacketNumVal3\t%d\tTop发包数目Val3\n" +
			
			// Top发包数目 4
			"TopSendPacketNumId4\t%d\tTop发包数目Id4\nTopSendPacketNumVal4\t%d\tTop发包数目Val4\n" +
			
			
			
			// Top收包流量 0
			"TopRecvSizeNumId0\t%d\tTop收包流量Id0\nTopRecvSizeNumVal0\t%d\tTop收包流量Val0\n" +
			
			// Top收包流量 1
			"TopRecvSizeNumId1\t%d\tTop收包流量Id1\nTopRecvSizeNumVal1\t%d\tTop收包流量Val1\n" +
			
			// Top收包流量 2
			"TopRecvSizeNumId2\t%d\tTop收包流量Id2\nTopRecvSizeNumVal2\t%d\tTop收包流量Val2\n" +
			
			// Top收包流量 3
			"TopRecvSizeNumId3\t%d\tTop收包流量Id3\nTopRecvSizeNumVal3\t%d\tTop收包流量Val3\n" +
			
			// Top收包流量 4
			"TopRecvSizeNumId4\t%d\tTop收包流量Id4\nTopRecvSizeNumVal4\t%d\tTop收包流量Val4\n" +
			
			
			
			// Top发包流量 0
			"TopSendSizeNumId0\t%d\tTop发包流量Id0\nTopSendSizeNumVal0\t%d\tTop发包流量Val0\n" +
			
			// Top发包流量 1
			"TopSendSizeNumId1\t%d\tTop发包流量Id1\nTopSendSizeNumVal1\t%d\tTop发包流量Val1\n" +
			
			// Top发包流量 2
			"TopSendSizeNumId2\t%d\tTop发包流量Id2\nTopSendSizeNumVal2\t%d\tTop发包流量Val2\n" +
			
			// Top发包流量 3
			"TopSendSizeNumId3\t%d\tTop发包流量Id3\nTopSendSizeNumVal3\t%d\tTop发包流量Val3\n" +
			
			// Top发包流量 4
			"TopSendSizeNumId4\t%d\tTop发包流量Id4\nTopSendSizeNumVal4\t%d\tTop发包流量Val4\n" +
			
			
			
			// Top收包处理时间 0
			"TopProcessTimeId0\t%d\tTop收包处理时间Id0\nTopProcessTimeVal0\t%d\tTop收包处理时间Val0\n" +
			
			// Top收包处理时间 1
			"TopProcessTimeId1\t%d\tTop收包处理时间Id1\nTopProcessTimeVal1\t%d\tTop收包处理时间Val1\n" +
			
			// Top收包处理时间 2
			"TopProcessTimeId2\t%d\tTop收包处理时间Id2\nTopProcessTimeVal2\t%d\tTop收包处理时间Val2\n" +
			
			// Top收包处理时间 3
			"TopProcessTimeId3\t%d\tTop收包处理时间Id3\nTopProcessTimeVal3\t%d\tTop收包处理时间Val3\n" +
			
			// Top收包处理时间 4
			"TopProcessTimeId4\t%d\tTop收包处理时间Id4\nTopProcessTimeVal4\t%d\tTop收包处理时间Val4\n" +
			
			
			
			// Top所有的发包数目 0
			"TopAllSendPacketNumId0\t%d\tTop所有的发包数目Id0\nTopAllSendPacketNumVal0\t%d\tTop所有的发包数目Val0\n" +
			
			// Top所有的发包数目 1
			"TopAllSendPacketNumId1\t%d\tTop所有的发包数目Id1\nTopAllSendPacketNumVal1\t%d\tTop所有的发包数目Val1\n" +
			
			// Top所有的发包数目 2
			"TopAllSendPacketNumId2\t%d\tTop所有的发包数目Id2\nTopAllSendPacketNumVal2\t%d\tTop所有的发包数目Val2\n" +
			
			// Top所有的发包数目 3
			"TopAllSendPacketNumId3\t%d\tTop所有的发包数目Id3\nTopAllSendPacketNumVal3\t%d\tTop所有的发包数目Val3\n" +
			
			// Top所有的发包数目 4
			"TopAllSendPacketNumId4\t%d\tTop所有的发包数目Id4\nTopAllSendPacketNumVal4\t%d\tTop所有的发包数目Val4\n" +
			
			
			
			// Top所有的发包流量 0
			"TopAllSendSizeNumId0\t%d\tTop所有的发包流量Id0\nTopAllSendSizeNumVal0\t%d\tTop所有的发包流量Val0\n" +
			
			// Top所有的发包流量 1
			"TopAllSendSizeNumId1\t%d\tTop所有的发包流量Id1\nTopAllSendSizeNumVal1\t%d\tTop所有的发包流量Val1\n" +
			
			// Top所有的发包流量 2
			"TopAllSendSizeNumId2\t%d\tTop所有的发包流量Id2\nTopAllSendSizeNumVal2\t%d\tTop所有的发包流量Val2\n" +
			
			// Top所有的发包流量 3
			"TopAllSendSizeNumId3\t%d\tTop所有的发包流量Id3\nTopAllSendSizeNumVal3\t%d\tTop所有的发包流量Val3\n" +
			
			// Top所有的发包流量 4
			"TopAllSendSizeNumId4\t%d\tTop所有的发包流量Id4\nTopAllSendSizeNumVal4\t%d\tTop所有的发包流量Val4\n" +
			
			
			
			"\n"
			
			, time
			
			// 桌子数目
			, TableInfoMapNum
			
			// 桌子数目
			, PlayerInfoMapNum
			
			// 桌子上的玩家数目
			, PlayerNum
			
			// 桌子数目
			, RoomInfoMapNum
			
			// 桌子数目
			, RoutinesNum
			
			// 桌子数目
			, UserIdToSessionIdNum
			
			// 开局的桌子
			, BeginNum
			
			// 结算的桌子
			, EndNum
			
			// 异常的桌子
			, ExceptionNum
			
			// 请求分桌数目
			, JoinNum
			
			// 分桌失败数目
			, JoinFailNum
			
			// 分桌多次失败的数目
			, JoinMaxFailNum
			
			// 分桌无playerinfo失败的数目
			, JoinNoInfoFailNum
			
			// 分桌不同设备失败的数目
			, JoinDiffFailNum
			
			// 分桌无routine失败的数目
			, JoinNoRoutineFailNum
			
			// 分桌失败的数目
			, JoinChooseTableFailNum
			
			// 分座位失败的数目
			, JoinChooseSeatFailNum
			
			// 分桌关服失败的数目
			, JoinOffFailNum
			
			// 分桌校验失败的数目
			, JoinTokenFailNum
			
			// 分桌金币失败的数目
			, JoinCoinsFailNum
			
			// 分桌锁定失败的数目
			, JoinLockFailNum
			
			// 分桌封禁失败的数目
			, JoinForbiddenFailNum
			
			// 分桌关服失败的数目
			, JoinCloseFailNum
			
			// 分到老桌数目
			, JoinExistNum
			
			// 分到新桌数目
			, JoinNewNum
			
			// 删除player数目
			, DeleteInactivePlayerNum
			
			// 删除session数目
			, DeleteInactiveSessionNum
			
			// 删除routine数目
			, DeleteInactiveRoutineNum
			
			// 收包数目
			, RecvPacketNum
			
			// 发包数目
			, SendPacketNum
			
			// 收包流量
			, RecvSizeNum
			
			// 发包流量
			, SendSizeNum
			
			// Top收包处理时间
			, ProcessTime
			
			// 所有的发包数目
			, AllSendPacketNum
			
			// 所有的发包流量
			, AllSendSizeNum
			
			
			
			// 各个房间的桌子数目 0
			, RoomTableNum[0]
			
			// 各个房间的桌子数目 1
			, RoomTableNum[1]
			
			// 各个房间的桌子数目 2
			, RoomTableNum[2]
			
			// 各个房间的桌子数目 3
			, RoomTableNum[3]
			
			// 各个房间的桌子数目 4
			, RoomTableNum[4]
			
			// 各个房间的桌子数目 5
			, RoomTableNum[5]
			
			// 各个房间的桌子数目 6
			, RoomTableNum[6]
			
			// 各个房间的桌子数目 7
			, RoomTableNum[7]
			
			// 各个房间的桌子数目 8
			, RoomTableNum[8]
			
			// 各个房间的桌子数目 9
			, RoomTableNum[9]
			
			// 各个房间的桌子数目 10
			, RoomTableNum[10]
			
			// 各个房间的桌子数目 11
			, RoomTableNum[11]
			
			// 各个房间的桌子数目 12
			, RoomTableNum[12]
			
			// 各个房间的桌子数目 13
			, RoomTableNum[13]
			
			// 各个房间的桌子数目 14
			, RoomTableNum[14]
			
			// 各个房间的桌子数目 15
			, RoomTableNum[15]
			
			// 各个房间的桌子数目 16
			, RoomTableNum[16]
			
			// 各个房间的桌子数目 17
			, RoomTableNum[17]
			
			// 各个房间的桌子数目 18
			, RoomTableNum[18]
			
			// 各个房间的桌子数目 19
			, RoomTableNum[19]
			
			// 各个房间的桌子数目 20
			, RoomTableNum[20]
			
			// 各个房间的桌子数目 21
			, RoomTableNum[21]
			
			// 各个房间的桌子数目 22
			, RoomTableNum[22]
			
			// 各个房间的桌子数目 23
			, RoomTableNum[23]
			
			// 各个房间的桌子数目 24
			, RoomTableNum[24]
			
			// 各个房间的桌子数目 25
			, RoomTableNum[25]
			
			// 各个房间的桌子数目 26
			, RoomTableNum[26]
			
			// 各个房间的桌子数目 27
			, RoomTableNum[27]
			
			// 各个房间的桌子数目 28
			, RoomTableNum[28]
			
			// 各个房间的桌子数目 29
			, RoomTableNum[29]
			
			
			
			// 桌子各状态数目 0
			, RoutineStateNum[0]
			
			// 桌子各状态数目 1
			, RoutineStateNum[1]
			
			// 桌子各状态数目 2
			, RoutineStateNum[2]
			
			// 桌子各状态数目 3
			, RoutineStateNum[3]
			
			// 桌子各状态数目 4
			, RoutineStateNum[4]
			
			// 桌子各状态数目 5
			, RoutineStateNum[5]
			
			// 桌子各状态数目 6
			, RoutineStateNum[6]
			
			// 桌子各状态数目 7
			, RoutineStateNum[7]
			
			// 桌子各状态数目 8
			, RoutineStateNum[8]
			
			// 桌子各状态数目 9
			, RoutineStateNum[9]
			
			
			
			// 桌子各人数数目 0
			, TableSeatsNum[0]
			
			// 桌子各人数数目 1
			, TableSeatsNum[1]
			
			// 桌子各人数数目 2
			, TableSeatsNum[2]
			
			// 桌子各人数数目 3
			, TableSeatsNum[3]
			
			// 桌子各人数数目 4
			, TableSeatsNum[4]
			
			// 桌子各人数数目 5
			, TableSeatsNum[5]
			
			
			
			
			// Top收包数目 0
			, uTopRecvPacketNumId[0], uTopRecvPacketNumVal[0]
			
			// Top收包数目 1
			, uTopRecvPacketNumId[1], uTopRecvPacketNumVal[1]
			
			// Top收包数目 2
			, uTopRecvPacketNumId[2], uTopRecvPacketNumVal[2]
			
			// Top收包数目 3
			, uTopRecvPacketNumId[3], uTopRecvPacketNumVal[3]
			
			// Top收包数目 4
			, uTopRecvPacketNumId[4], uTopRecvPacketNumVal[4]
			
			
			
			// Top发包数目 0
			, uTopSendPacketNumId[0], uTopSendPacketNumVal[0]
			
			// Top发包数目 1
			, uTopSendPacketNumId[1], uTopSendPacketNumVal[1]
			
			// Top发包数目 2
			, uTopSendPacketNumId[2], uTopSendPacketNumVal[2]
			
			// Top发包数目 3
			, uTopSendPacketNumId[3], uTopSendPacketNumVal[3]
			
			// Top发包数目 4
			, uTopSendPacketNumId[4], uTopSendPacketNumVal[4]
			
			
			
			// Top收包流量 0
			, uTopRecvSizeNumId[0], uTopRecvSizeNumVal[0]
			
			// Top收包流量 1
			, uTopRecvSizeNumId[1], uTopRecvSizeNumVal[1]
			
			// Top收包流量 2
			, uTopRecvSizeNumId[2], uTopRecvSizeNumVal[2]
			
			// Top收包流量 3
			, uTopRecvSizeNumId[3], uTopRecvSizeNumVal[3]
			
			// Top收包流量 4
			, uTopRecvSizeNumId[4], uTopRecvSizeNumVal[4]
			
			
			
			// Top发包流量 0
			, uTopSendSizeNumId[0], uTopSendSizeNumVal[0]
			
			// Top发包流量 1
			, uTopSendSizeNumId[1], uTopSendSizeNumVal[1]
			
			// Top发包流量 2
			, uTopSendSizeNumId[2], uTopSendSizeNumVal[2]
			
			// Top发包流量 3
			, uTopSendSizeNumId[3], uTopSendSizeNumVal[3]
			
			// Top发包流量 4
			, uTopSendSizeNumId[4], uTopSendSizeNumVal[4]
			
			
			
			// Top收包处理时间 0
			, uTopProcessTimeId[0], uTopProcessTimeVal[0]
			
			// Top收包处理时间 1
			, uTopProcessTimeId[1], uTopProcessTimeVal[1]
			
			// Top收包处理时间 2
			, uTopProcessTimeId[2], uTopProcessTimeVal[2]
			
			// Top收包处理时间 3
			, uTopProcessTimeId[3], uTopProcessTimeVal[3]
			
			// Top收包处理时间 4
			, uTopProcessTimeId[4], uTopProcessTimeVal[4]
			
			
			
			// Top所有的发包数目 0
			, uTopAllSendPacketNumId[0], uTopAllSendPacketNumVal[0]
			
			// Top所有的发包数目 1
			, uTopAllSendPacketNumId[1], uTopAllSendPacketNumVal[1]
			
			// Top所有的发包数目 2
			, uTopAllSendPacketNumId[2], uTopAllSendPacketNumVal[2]
			
			// Top所有的发包数目 3
			, uTopAllSendPacketNumId[3], uTopAllSendPacketNumVal[3]
			
			// Top所有的发包数目 4
			, uTopAllSendPacketNumId[4], uTopAllSendPacketNumVal[4]
			
			
			
			// Top所有的发包流量 0
			, uTopAllSendSizeNumId[0], uTopAllSendSizeNumVal[0]
			
			// Top所有的发包流量 1
			, uTopAllSendSizeNumId[1], uTopAllSendSizeNumVal[1]
			
			// Top所有的发包流量 2
			, uTopAllSendSizeNumId[2], uTopAllSendSizeNumVal[2]
			
			// Top所有的发包流量 3
			, uTopAllSendSizeNumId[3], uTopAllSendSizeNumVal[3]
			
			// Top所有的发包流量 4
			, uTopAllSendSizeNumId[4], uTopAllSendSizeNumVal[4]
			
			
			
			);
			
		clear();
		
		try
		{
			FileOutputStream out = new FileOutputStream(file, true);
			out.write(str.toString().getBytes("utf-8"));
			out.close();
		}
		catch (IOException e)
		{
			e.printStackTrace();
			return;
		}
		
	}
    
}

